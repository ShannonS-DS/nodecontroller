#!/bin/bash

set -e
set -x
#set -v 
#This is configures an odroid to be a node controller
export waggle_dir="$(pwd)"
export waggled_dir="${waggle_dir}/nc-wag-os/waggled"


if [ "$EUID" -ne 0 ]
  then echo "Please run as root"
  exit
fi


if [ $(python -c "import crcmod;" ; echo $?) -ne 0 ] ; then
  ./scripts/install_dependencies.sh
fi

# for log files
mkdir -p /var/log/waggle/

# Create symlink if repository is not already at the expected location
if [ `pwd` != "/usr/lib/waggle/nodecontroller" ] ; then
  mkdir -p /usr/lib/waggle/
  if [ -d /usr/lib/waggle/nodecontroller ] && [ ! -L /usr/lib/waggle/nodecontroller ] ; then 
    echo "Error: Directory /usr/lib/waggle/nodecontroller already exists."
    exit 1
  fi
  rm /usr/lib/waggle/nodecontroller
  ln -s `pwd` /usr/lib/waggle/nodecontroller
fi


#set waggle parameters
mkdir -p /etc/waggle/

# set node controller IP for "internal" network
if [ ! -e /etc/waggle/NCIP ] ; then
  echo "10.31.81.10" > /etc/waggle/NCIP
fi

if [ ! -e /etc/waggle/node_controller_host ] ; then
  echo "10.31.81.10" > /etc/waggle/node_controller_host
fi

if [ ! -e /etc/waggle/node_id ] ; then
 source /usr/lib/waggle/waggle_image/create_node_id.sh
fi

export NODE_ID=`cat /etc/waggle/node_id`

if [ "${NODE_ID}x" == "x" ] ; then
  echo "error: NODE_ID is undefined"
  exit 1
fi

# this is only for backwards compatibility with PacketHandler.py
if [ ! -e /etc/waggle/hostname ] ; then
  echo ${NODE_ID} > /etc/waggle/hostname
fi

if [ ${RABBITMQ_HOST}x == "x" ] ; then
  if [ -e /etc/waggle/server_host ] ; then
    RABBITMQ_HOST=`cat /etc/waggle/server_host`
  fi
fi

if [ ${RABBITMQ_HOST}x == "x" ] ; then
  # Get the IP for the server you want to connect to
  read -p "Enter the URL or IP address of the beehive cloud server you want to use: " RABBITMQ_HOST
fi

if [ ${RABBITMQ_HOST}x == "x" ] ; then
  export RABBITMQ_HOST='127.0.0.1'
fi

#We have to move away from manual input, and take it as an argument, with the 
#default beehive server IP set to localhost. Also, we need a way to let the 
#user know that a wrong server was chosen.
echo "The beehive server is set to ${RABBITMQ_HOST}."
sleep 1
echo ${RABBITMQ_HOST} > /etc/waggle/server_host


#has to be changed so that the requirement for node ID in the packet header is met
echo " " > /etc/waggle/queuename
echo "${NODE_ID}, \n" > /etc/waggle/devices
echo "1,2,3,4, \n" >> /etc/waggle/devices
echo "${NODE_ID}:5, \n" >> /etc/waggle/devices

#make directory to store data cache log files and stored messages
#make / as large as possible, all the cached data gets stored here. 
mkdir -p /var/dc
#store outoing messages here
mkdir -p /var/dc/outgoing_msgs
#store incoming messages here
#each external guest node that registers with the nodecontroller will have a separate folder
mkdir -p /var/dc/incoming_msgs

#make directory to store comms log files
mkdir -p /var/log/comms



# add init.d scripts

#missing: heartbeat_start.sh
#for script in communications.sh data_cache.sh waggle_core_sense.sh WagMan_start.sh heartbeat_setup_start.sh  ; do
#  ln -sf  ${waggled_dir}/init.d/${script} /etc/init.d/
#  update-rc.d communications.sh defaults
#done

# just in case:
#mkdir -p /etc/supervisor/conf.d/
#for script in waggle_communications.conf waggle_data_cache.conf waggle_wagman.conf waggle_reverse_ssh_tunnel.conf ; do
#    ln -sf ${waggled_dir}/supervisor/${script} /etc/supervisor/conf.d/${script}
#done

# transition from supervisor to upstart
rm -f /etc/supervisor/conf.d/waggle_*


# upstart
for script in $(ls -1 ${waggle_dir}/nc-wag-os/waggled/upstart/) ; do 
  ln -sf ${waggled_dir}/upstart/${script} /etc/init/${script} 
done



#creates udev rule to attach Wagman to /dev/wagman
ln -sf  ${waggled_dir}/init.d/99-usb-serial.rules /etc/udev/rules.d/

echo "done"

